// <auto-generated />
using System;
using DrinkDiscovery_Revised.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DrinkDiscovery_Revised.Migrations.DrinkDiscoveryAdmin
{
    [DbContext(typeof(DrinkDiscoveryAdminContext))]
    partial class DrinkDiscoveryAdminContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DrinkDiscovery_Revised.Models.Adminler", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("admin_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdminId"));

                    b.Property<string>("AdminAd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("admin_ad");

                    b.Property<byte[]>("AdminFotograf")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("admin_fotograf");

                    b.Property<string>("AdminSifre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("admin_sifre");

                    b.HasKey("AdminId");

                    b.ToTable("Adminler", (string)null);
                });

            modelBuilder.Entity("DrinkDiscovery_Revised.Models.IcecekKategoriler", b =>
                {
                    b.Property<int>("IcecekKategoriId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("icecek_kategori_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IcecekKategoriId"));

                    b.Property<string>("IcecekKategoriAd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("icecek_kategori_ad");

                    b.HasKey("IcecekKategoriId");

                    b.ToTable("IcecekKategoriler", (string)null);
                });

            modelBuilder.Entity("DrinkDiscovery_Revised.Models.Icecekler", b =>
                {
                    b.Property<int>("IcecekId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("icecek_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IcecekId"));

                    b.Property<int>("BeverageCatId")
                        .HasColumnType("int")
                        .HasColumnName("beverage_cat_id");

                    b.Property<bool?>("HaftaninIcecegi")
                        .HasColumnType("bit")
                        .HasColumnName("haftanin_icecegi");

                    b.Property<string>("IcecekAd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("icecek_ad");

                    b.Property<float>("IcecekFiyat")
                        .HasColumnType("real")
                        .HasColumnName("icecek_fiyat");

                    b.Property<int?>("IcecekKategoriId")
                        .HasColumnType("int")
                        .HasColumnName("icecek_kategori_id");

                    b.Property<string>("IcecekMalzemeler")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("icecek_malzemeler");

                    b.Property<float>("IcecekPuan")
                        .HasColumnType("real")
                        .HasColumnName("icecek_puan");

                    b.Property<byte[]>("IcecekResim")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("icecek_resim");

                    b.Property<string>("IcecekYapilis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("icecek_yapilis");

                    b.HasKey("IcecekId");

                    b.HasIndex(new[] { "IcecekKategoriId" }, "IX_Icecekler_icecek_kategori_id");

                    b.ToTable("Icecekler", (string)null);
                });

            modelBuilder.Entity("DrinkDiscovery_Revised.Models.Kullanicilar", b =>
                {
                    b.Property<int>("KullaniciId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("kullanici_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KullaniciId"));

                    b.Property<string>("KullaniciAd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("kullanici_ad");

                    b.Property<byte[]>("KullaniciFotograf")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("kullanici_fotograf");

                    b.Property<string>("KullaniciMail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("kullanici_mail");

                    b.Property<string>("KullaniciSifre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("kullanici_sifre");

                    b.Property<string>("KullaniciSoyad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("kullanici_soyad");

                    b.Property<string>("KullaniciTelefon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("kullanici_telefon");

                    b.HasKey("KullaniciId");

                    b.ToTable("Kullanicilar", (string)null);
                });

            modelBuilder.Entity("DrinkDiscovery_Revised.Models.Tatlilar", b =>
                {
                    b.Property<int>("TatliId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("tatli_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TatliId"));

                    b.Property<bool>("Display")
                        .HasColumnType("bit")
                        .HasColumnName("display");

                    b.Property<string>("TatliAciklama")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("tatli_aciklama");

                    b.Property<string>("TatliAd")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("tatli_ad");

                    b.Property<float?>("TatliFiyat")
                        .HasColumnType("real")
                        .HasColumnName("tatli_fiyat");

                    b.Property<int?>("TatliKategoriId")
                        .HasColumnType("int")
                        .HasColumnName("tatli_kategori_id");

                    b.Property<string>("TatliMalzemeler")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("tatli_malzemeler");

                    b.Property<float?>("TatliPuan")
                        .HasColumnType("real")
                        .HasColumnName("tatli_puan");

                    b.Property<byte[]>("TatliResim")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("tatli_resim");

                    b.Property<string>("TatliYapilis")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("tatli_yapilis");

                    b.HasKey("TatliId");

                    b.HasIndex(new[] { "TatliKategoriId" }, "IX_Tatlilar_tatli_kategori_id");

                    b.ToTable("Tatlilar", (string)null);
                });

            modelBuilder.Entity("DrinkDiscovery_Revised.Models.TatlilarKategoriler", b =>
                {
                    b.Property<int>("TatliKategoriId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("tatli_kategori_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TatliKategoriId"));

                    b.Property<string>("TatliKategoriAd")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("tatli_kategori_ad");

                    b.HasKey("TatliKategoriId");

                    b.ToTable("TatlilarKategoriler", (string)null);
                });

            modelBuilder.Entity("DrinkDiscovery_Revised.Models.UrunKategoriler", b =>
                {
                    b.Property<int>("UrunKategoriId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("urun_kategori_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UrunKategoriId"));

                    b.Property<string>("UrunKategoriAd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("urun_kategori_ad");

                    b.HasKey("UrunKategoriId");

                    b.ToTable("UrunKategoriler", (string)null);
                });

            modelBuilder.Entity("DrinkDiscovery_Revised.Models.Urunler", b =>
                {
                    b.Property<int>("UrunId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("urun_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UrunId"));

                    b.Property<bool>("DisplaySlider")
                        .HasColumnType("bit")
                        .HasColumnName("display_slider");

                    b.Property<int>("ProductCatId")
                        .HasColumnType("int")
                        .HasColumnName("product_cat_id");

                    b.Property<string>("UrunAd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("urun_ad");

                    b.Property<float>("UrunFiyat")
                        .HasColumnType("real")
                        .HasColumnName("urun_fiyat");

                    b.Property<string>("UrunIcerik")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("urun_icerik");

                    b.Property<int?>("UrunKategoriId")
                        .HasColumnType("int")
                        .HasColumnName("urun_kategori_id");

                    b.Property<string>("UrunMalzemeler")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("urun_malzemeler");

                    b.Property<float>("UrunPuan")
                        .HasColumnType("real")
                        .HasColumnName("urun_puan");

                    b.Property<byte[]>("UrunResim")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("urun_resim");

                    b.HasKey("UrunId");

                    b.HasIndex(new[] { "UrunKategoriId" }, "IX_Urunler_urun_kategori_id");

                    b.ToTable("Urunler", (string)null);
                });

            modelBuilder.Entity("DrinkDiscovery_Revised.Models.Yorumlar", b =>
                {
                    b.Property<int>("YorumId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("yorum_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("YorumId"));

                    b.Property<int?>("IceceklersicecekId")
                        .HasColumnType("int")
                        .HasColumnName("Iceceklersicecek_id");

                    b.Property<int?>("KullanicilarskullaniciId")
                        .HasColumnType("int")
                        .HasColumnName("Kullanicilarskullanici_id");

                    b.Property<int?>("TatlilarstatliId")
                        .HasColumnType("int")
                        .HasColumnName("Tatlilarstatli_id");

                    b.Property<int?>("UrunlersurunId")
                        .HasColumnType("int")
                        .HasColumnName("Urunlersurun_id");

                    b.Property<string>("YorumIcerik")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("yorum_icerik");

                    b.Property<string>("YorumKullaniciId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("yorum_kullanici_id");

                    b.Property<int?>("YorumPuan")
                        .HasColumnType("int")
                        .HasColumnName("yorum_puan");

                    b.Property<DateTime?>("YorumTarih")
                        .HasColumnType("datetime2")
                        .HasColumnName("yorum_tarih");

                    b.Property<int?>("YorumUrunId")
                        .HasColumnType("int")
                        .HasColumnName("yorum_urun_id");

                    b.HasKey("YorumId");

                    b.HasIndex(new[] { "IceceklersicecekId" }, "IX_Yorumlar_Iceceklersicecek_id");

                    b.HasIndex(new[] { "KullanicilarskullaniciId" }, "IX_Yorumlar_Kullanicilarskullanici_id");

                    b.HasIndex(new[] { "TatlilarstatliId" }, "IX_Yorumlar_Tatlilarstatli_id");

                    b.HasIndex(new[] { "UrunlersurunId" }, "IX_Yorumlar_Urunlersurun_id");

                    b.ToTable("Yorumlar", (string)null);
                });

            modelBuilder.Entity("DrinkDiscovery_Revised.Models.Icecekler", b =>
                {
                    b.HasOne("DrinkDiscovery_Revised.Models.IcecekKategoriler", "IcecekKategori")
                        .WithMany("Iceceklers")
                        .HasForeignKey("IcecekKategoriId");

                    b.Navigation("IcecekKategori");
                });

            modelBuilder.Entity("DrinkDiscovery_Revised.Models.Tatlilar", b =>
                {
                    b.HasOne("DrinkDiscovery_Revised.Models.TatlilarKategoriler", "TatliKategori")
                        .WithMany("Tatlilars")
                        .HasForeignKey("TatliKategoriId");

                    b.Navigation("TatliKategori");
                });

            modelBuilder.Entity("DrinkDiscovery_Revised.Models.Urunler", b =>
                {
                    b.HasOne("DrinkDiscovery_Revised.Models.UrunKategoriler", "UrunKategori")
                        .WithMany("Urunlers")
                        .HasForeignKey("UrunKategoriId");

                    b.Navigation("UrunKategori");
                });

            modelBuilder.Entity("DrinkDiscovery_Revised.Models.Yorumlar", b =>
                {
                    b.HasOne("DrinkDiscovery_Revised.Models.Icecekler", "Iceceklersicecek")
                        .WithMany("Yorumlars")
                        .HasForeignKey("IceceklersicecekId");

                    b.HasOne("DrinkDiscovery_Revised.Models.Kullanicilar", "Kullanicilarskullanici")
                        .WithMany("Yorumlars")
                        .HasForeignKey("KullanicilarskullaniciId");

                    b.HasOne("DrinkDiscovery_Revised.Models.Tatlilar", "Tatlilarstatli")
                        .WithMany("Yorumlars")
                        .HasForeignKey("TatlilarstatliId");

                    b.HasOne("DrinkDiscovery_Revised.Models.Urunler", "Urunlersurun")
                        .WithMany("Yorumlars")
                        .HasForeignKey("UrunlersurunId");

                    b.Navigation("Iceceklersicecek");

                    b.Navigation("Kullanicilarskullanici");

                    b.Navigation("Tatlilarstatli");

                    b.Navigation("Urunlersurun");
                });

            modelBuilder.Entity("DrinkDiscovery_Revised.Models.IcecekKategoriler", b =>
                {
                    b.Navigation("Iceceklers");
                });

            modelBuilder.Entity("DrinkDiscovery_Revised.Models.Icecekler", b =>
                {
                    b.Navigation("Yorumlars");
                });

            modelBuilder.Entity("DrinkDiscovery_Revised.Models.Kullanicilar", b =>
                {
                    b.Navigation("Yorumlars");
                });

            modelBuilder.Entity("DrinkDiscovery_Revised.Models.Tatlilar", b =>
                {
                    b.Navigation("Yorumlars");
                });

            modelBuilder.Entity("DrinkDiscovery_Revised.Models.TatlilarKategoriler", b =>
                {
                    b.Navigation("Tatlilars");
                });

            modelBuilder.Entity("DrinkDiscovery_Revised.Models.UrunKategoriler", b =>
                {
                    b.Navigation("Urunlers");
                });

            modelBuilder.Entity("DrinkDiscovery_Revised.Models.Urunler", b =>
                {
                    b.Navigation("Yorumlars");
                });
#pragma warning restore 612, 618
        }
    }
}
